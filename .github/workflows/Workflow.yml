name: Java CI/CD with Maven

on:
   workflow_dispatch:
    branches:
      - main

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
  #SSH_KEY_PATH: ${{ secrets.SSH_PRIVATE_KEY }}


jobs:
  
  Build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -DskipTests=true package --file pom.xml
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: my_java_app
        path: target/employee-0.0.1-SNAPSHOT.jar

  Deploy:
     name: Provision aws infrastructure using Terraform
     runs-on: ubuntu-latest
     outputs:
       eip: ${{ steps.EIP.outputs.ec2_address }}
     needs: [ Build ]
     environment: ${{ github.event.inputs.environment }}
     env:
       TF_VAR_aws_region: ${{ vars.AWS_REGION }}
       TF_VAR_keypair: ${{ secrets.SSH_KEY_PATH }}
     steps: 
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: my_java_app
          path: artifacts/
       
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
    
      
      - name: Terraform Init
        run: terraform init
      
      - name: Terraform Plan
        run: terraform plan
      
      - name: Terraform Apply
        run: terraform apply --auto-approve

      - name: Get Instance IP
        id: EIP
        run: |
          terraform-bin output -raw instance_public_ip > ip_address.txt
          echo "ec2_address=$(cat ip_address.txt)" >> $GITHUB_OUTPUT
      - name: copy file via ssh key
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ steps.EIP.outputs.ec2_address }}
          username: ec2-user
          port: 22
          key: ${{ secrets.SSH_KEY_PATH }}
          source: artifacts/
          target: /home/ec2-user/app
      - name: multiple command
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ steps.EIP.outputs.ec2_address  }}
          username: ec2-user
          key: ${{ secrets.SSH_KEY_PATH }}
          port: 22
          script: |
              sudo wget https://dev.mysql.com/get/mysql80-community-release-el9-1.noarch.rpm 
              sudo dnf install mysql80-community-release-el9-1.noarch.rpm -y
              sudo dnf install mysql-community-server -y
              sudo systemctl start mysqld
              sudo echo "skip-grant-tables" >> /etc/my.cnf
              sudo systemctl restart mysqld
              sudo mysql 
              ALTER USER 'root'@'localhost' IDENTIFIED BY BY 'root';
              GRANT ALL PRIVILEGES ON *.* TO 'root'@'host';
              FLUSH PRIVILEGES;
              exit
              java -jar /home/ec2-user/app/employee-0.0.1-SNAPSHOT.jar
              